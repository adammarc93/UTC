//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UTCService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Truck", Namespace="http://schemas.datacontract.org/2004/07/UTCService")]
    public partial class Truck : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string BrandField;
        
        private string CarStatusField;
        
        private string ColorField;
        
        private string FuelField;
        
        private int IdField;
        
        private int MileageField;
        
        private string ModelField;
        
        private int TotalCostField;
        
        private int YearOfProductionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand
        {
            get
            {
                return this.BrandField;
            }
            set
            {
                this.BrandField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarStatus
        {
            get
            {
                return this.CarStatusField;
            }
            set
            {
                this.CarStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color
        {
            get
            {
                return this.ColorField;
            }
            set
            {
                this.ColorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fuel
        {
            get
            {
                return this.FuelField;
            }
            set
            {
                this.FuelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mileage
        {
            get
            {
                return this.MileageField;
            }
            set
            {
                this.MileageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model
        {
            get
            {
                return this.ModelField;
            }
            set
            {
                this.ModelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCost
        {
            get
            {
                return this.TotalCostField;
            }
            set
            {
                this.TotalCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearOfProduction
        {
            get
            {
                return this.YearOfProductionField;
            }
            set
            {
                this.YearOfProductionField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITruckService")]
public interface ITruckService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITruckService/GetTrucks", ReplyAction="http://tempuri.org/ITruckService/GetTrucksResponse")]
    UTCService.Truck[] GetTrucks();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITruckService/GetTrucks", ReplyAction="http://tempuri.org/ITruckService/GetTrucksResponse")]
    System.Threading.Tasks.Task<UTCService.Truck[]> GetTrucksAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITruckService/AddTruck", ReplyAction="http://tempuri.org/ITruckService/AddTruckResponse")]
    void AddTruck(UTCService.Truck newTruck);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITruckService/AddTruck", ReplyAction="http://tempuri.org/ITruckService/AddTruckResponse")]
    System.Threading.Tasks.Task AddTruckAsync(UTCService.Truck newTruck);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITruckService/UpdateTruck", ReplyAction="http://tempuri.org/ITruckService/UpdateTruckResponse")]
    void UpdateTruck(UTCService.Truck newTruck);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITruckService/UpdateTruck", ReplyAction="http://tempuri.org/ITruckService/UpdateTruckResponse")]
    System.Threading.Tasks.Task UpdateTruckAsync(UTCService.Truck newTruck);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITruckService/DeleteTruck", ReplyAction="http://tempuri.org/ITruckService/DeleteTruckResponse")]
    void DeleteTruck(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITruckService/DeleteTruck", ReplyAction="http://tempuri.org/ITruckService/DeleteTruckResponse")]
    System.Threading.Tasks.Task DeleteTruckAsync(int id);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ITruckServiceChannel : ITruckService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TruckServiceClient : System.ServiceModel.ClientBase<ITruckService>, ITruckService
{
    
    public TruckServiceClient()
    {
    }
    
    public TruckServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public TruckServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TruckServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TruckServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public UTCService.Truck[] GetTrucks()
    {
        return base.Channel.GetTrucks();
    }
    
    public System.Threading.Tasks.Task<UTCService.Truck[]> GetTrucksAsync()
    {
        return base.Channel.GetTrucksAsync();
    }
    
    public void AddTruck(UTCService.Truck newTruck)
    {
        base.Channel.AddTruck(newTruck);
    }
    
    public System.Threading.Tasks.Task AddTruckAsync(UTCService.Truck newTruck)
    {
        return base.Channel.AddTruckAsync(newTruck);
    }
    
    public void UpdateTruck(UTCService.Truck newTruck)
    {
        base.Channel.UpdateTruck(newTruck);
    }
    
    public System.Threading.Tasks.Task UpdateTruckAsync(UTCService.Truck newTruck)
    {
        return base.Channel.UpdateTruckAsync(newTruck);
    }
    
    public void DeleteTruck(int id)
    {
        base.Channel.DeleteTruck(id);
    }
    
    public System.Threading.Tasks.Task DeleteTruckAsync(int id)
    {
        return base.Channel.DeleteTruckAsync(id);
    }
}
